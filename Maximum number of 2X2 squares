Given the base (in units) of a right-angled isoceles traingle, find the maximum number of 2X2 squares that can fit in the triangle with given base.

Example 1:

Input: 8
Output: 6

Example 2:

Input : 7
Output : 3
Explanation : In the base we can keep 2 squares and above the two squares we can only keep 1 square. So the total number of squares are equal to 3.

CODE:

//{ Driver Code Starts
//Initial Template for Java

import java.util.*;
import java.io.*;
import java.lang.*;

class Driver
{
    public static void main(String args[])throws IOException
    {
        BufferedReader read = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(read.readLine());//testcases
        
        while(t-- > 0)
        {
            long n = Long.parseLong(read.readLine());//input n
            
            Solution ob= new Solution();
            System.out.println(ob.numberOfSquares(n));
        }
    }
}

// } Driver Code Ends

//User function Template for Java

class Solution
{
    public static long numberOfSquares(long base)
    {
        long b=Math.toIntExact(base);
        long v;
        long z=0L;
        //code here
        if(b%2==0)
        {
             v=b/2;
             z=v-1;
        }
        else if(b%2!=0)
        {
             v=(b-1)/2;
             z=v-1;
        }
        long sum=(z*(z+1))/2;
        return(sum);
    }
}
