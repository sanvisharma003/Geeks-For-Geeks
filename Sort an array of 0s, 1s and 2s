Given an array of size N containing only 0s, 1s, and 2s; sort the array in ascending order.

Example 1:
Input: 
N = 5
arr[]= {0 2 1 2 0}
Output:
0 0 1 2 2
Explanation:
0s 1s and 2s are segregated 
into ascending order.

CODE:

//{ Driver Code Starts
//Initial template for Java

import java.io.*;
import java.util.*;


// } Driver Code Ends
//User function template for Java

class Solution
{
    public static void sort012(int a[], int n)
    {
        int c0 = 0, c1 = 0, c2 = 0;
       for (int i = 0; i < n; i++) 
       {
            if (a[i] == 0)
                c0++;
            else if (a[i] == 1)
                c1++;
            else if (a[i] == 2)
                c2++;
        }
        for (int j = 0; j < c0 ; j++)
        {
            a[j] = 0;
        }
        for (int j = c0; j < c0+c1 ; j++)
        {
            a[j] = 1;
        }
        for (int j = c0+c1; j < c2+c0+c1 ; j++)
        {
            a[j] = 2;
        }
    }
}
//{ Driver Code Starts.

class GFG {
    
    public static void main (String[] args) throws IOException {
        BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
        int t = Integer.parseInt(br.readLine().trim()); //Inputting the testcases
        while(t-->0){
            int n = Integer.parseInt(br.readLine().trim());
            int arr[] = new int[n];
            String inputLine[] = br.readLine().trim().split(" ");
            for(int i=0; i<n; i++){
                arr[i] = Integer.parseInt(inputLine[i]);
            }
            Solution ob=new Solution();
            ob.sort012(arr, n);
            StringBuffer str = new StringBuffer();
            for(int i=0; i<n; i++){
                str.append(arr[i]+" ");
            }
            System.out.println(str);
        }
    }
}


// } Driver Code Ends
