You are given the head of a linked list. You have to replace all the values of the nodes with the nearest prime number. If more than one prime number exists at an equal distance, choose the smallest one.

Example 1:
Input:
2 → 6 → 10
Output:
2 → 5 → 11
Explanation:
The nearest prime of 2 is 2 itself. The nearest primes of 6 are 5 and 7, since 5 is smaller so, 5 will be chosen. The nearest prime of 10 is 11.

CODE:

//{ Driver Code Starts
//Initial Template for Java
import java.io.*;
import java.util.*;

class Node{
    Node next;
    int val;
    public Node(int data){
        val=data;
        next=null;
    }
}

class Main
{
    public static void main(String args[])throws Exception
    {
        BufferedReader in=new BufferedReader(new InputStreamReader(System.in));
        PrintWriter out=new PrintWriter(System.out);
        
        int t;
        t=Integer.parseInt(in.readLine());
        while(t-->0){
            int n;
            n=Integer.parseInt(in.readLine());
            Node head,tail;
            String s[]=in.readLine().trim().split(" ");
            int num=Integer.parseInt(s[0]);
            head=new Node(num);
            tail=head;
            for(int i=1;i<n;i++){
                num=Integer.parseInt(s[i]);
                tail.next=new Node(num);
                tail=tail.next;
            }
            Solution ob=new Solution();
            Node temp=ob.primeList(head);
            while(temp!=null){
                out.print(temp.val+" ");
                temp=temp.next;
            }
            out.println();
        }
        out.close();
    }
}
// } Driver Code Ends


//User function Template for Java
/*
class Node{
    Node next;
    int val;
    public Node(int data){
        val=data;
        next=null;
    }
}
*/

class Solution
{
    static int isprime(int n)
    {
        if(n==1||n==0)
            return -1;
        for(int i=2;i<n;i++)
        {
            if(n%i==0)
               return -1;
        }
        return n;
    }
    
    Node primeList(Node head){
        //code here
        
        Node p=head;
        while(p!=null)
        {
            if(isprime(p.val)!=-1)
               p=p.next;
               
            else
            {
                int count1=0, count2=0, r=p.val,l=p.val;
                     
                while(isprime(r)==-1)
                {
                   r++;
                   count1++;
                }
                   
                while(isprime(l)==-1)
                {
                   l--;
                   count2++;
                }
                  
                if(count1 < count2)
                   p.val=r;
                   
                else if(count1 > count2)
                   p.val=l;
                   
                else
                {
                    if(l<r)
                       p.val=l;
                    else
                       p.val=r;
                }
               
                p=p.next;
            }
            
        }
        return head;
    }
}
